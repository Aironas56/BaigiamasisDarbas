{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aira\\\\Desktop\\\\JobSearcj\\\\myfirstreactapp\\\\src\\\\Pages\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Form, Formik, Field, ErrorMessage } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { login } from \"../../api/UserApi\";\nimport { useDispatch } from \"react-redux\";\nimport { setJwt, setUserData } from \"../../store/slices/userSlice\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport \"./Login.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const {\n    t\n  } = useTranslation(\"login\");\n\n  const postLogin = (loginData, {\n    setSubmitting\n  }) => {\n    setSubmitting(true);\n    login(loginData).then(({\n      data,\n      headers: {\n        authorization\n      }\n    }) => {\n      dispatch(setUserData(data));\n      dispatch(setJwt(authorization));\n      const {\n        from\n      } = location.state || {\n        from: {\n          pathname: '/'\n        }\n      };\n      history.push(from);\n    }).finally(() => setSubmitting(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: postLogin,\n    children: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form-login\",\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          component: \"main\",\n          maxWidth: \"xs\",\n          children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: \"title\",\n              component: \"h1\",\n              variant: \"h5\",\n              children: t('signIn')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"Field-input\",\n              variant: \"outlined\",\n              placeholder: \"Username\",\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"username\",\n              label: \"Username\",\n              name: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"Field-input\",\n              variant: \"outlined\",\n              margin: \"normal\",\n              placeholder: \"Password\",\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"sign-in\",\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              children: t('sign')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), \"); }\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}, \"4vSkalT8s5XREL4p6yzkiBWTsb0=\", false, function () {\n  return [useHistory, useLocation, useDispatch, useTranslation];\n});","map":{"version":3,"sources":["C:/Users/Aira/Desktop/JobSearcj/myfirstreactapp/src/Pages/Login/Login.js"],"names":["React","Form","Formik","Field","ErrorMessage","useHistory","useLocation","login","useDispatch","setJwt","setUserData","Container","CssBaseline","Typography","TextField","Button","Grid","Link","useTranslation","history","location","dispatch","t","postLogin","loginData","setSubmitting","then","data","headers","authorization","from","state","pathname","push","finally","username","password","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,YAA7B,QAAgD,QAAhD;AACA,SAAQC,UAAR,EAAqBC,WAArB,QAAuC,kBAAvC;AACA,SAAQC,KAAR,QAAoB,mBAApB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,MAAR,EAAgBC,WAAhB,QAAkC,8BAAlC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,aAAP;AACA,SAAQC,cAAR,QAA6B,eAA7B;;;AAGA,kBAAe,MAAM;AAAA;;AACjB,QAAMC,OAAO,GAAGd,UAAU,EAA1B;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM;AAACc,IAAAA;AAAD,MAAMJ,cAAc,CAAC,OAAD,CAA1B;;AAEA,QAAMK,SAAS,GAAG,CAACC,SAAD,EAAY;AAAEC,IAAAA;AAAF,GAAZ,KAAkC;AAChDA,IAAAA,aAAa,CAAC,IAAD,CAAb;AAEAlB,IAAAA,KAAK,CAACiB,SAAD,CAAL,CACKE,IADL,CACU,CAAC;AAACC,MAAAA,IAAD;AAAOC,MAAAA,OAAO,EAAE;AAAEC,QAAAA;AAAF;AAAhB,KAAD,KAAwC;AAC1CR,MAAAA,QAAQ,CAACX,WAAW,CAACiB,IAAD,CAAZ,CAAR;AACAN,MAAAA,QAAQ,CAACZ,MAAM,CAACoB,aAAD,CAAP,CAAR;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAWV,QAAQ,CAACW,KAAT,IAAkB;AAC/BD,QAAAA,IAAI,EAAE;AACFE,UAAAA,QAAQ,EAAE;AADR;AADyB,OAAnC;AAMAb,MAAAA,OAAO,CAACc,IAAR,CAAaH,IAAb;AACH,KAZL,EAaKI,OAbL,CAaa,MAAMT,aAAa,CAAC,KAAD,CAbhC;AAcH,GAjBD;;AAmBA,sBACI,QAAC,MAAD;AACI,IAAA,aAAa,EAAE;AACXU,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KADnB;AAKI,IAAA,QAAQ,EAAEb,SALd;AAAA,cAOMc,KAAD,iBACG;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,gCACI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,MAArB;AAA4B,UAAA,QAAQ,EAAC,IAArC;AAAA,kCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,oCACI,QAAC,UAAD;AAAa,cAAA,SAAS,EAAC,OAAvB;AAA+B,cAAA,SAAS,EAAC,IAAzC;AAA8C,cAAA,OAAO,EAAC,IAAtD;AAAA,wBACKf,CAAC,CAAC,QAAD;AADN;AAAA;AAAA;AAAA;AAAA,oBADJ,eAIQ,QAAC,KAAD;AAAO,cAAA,SAAS,EAAC,aAAjB;AACI,cAAA,OAAO,EAAC,UADZ;AAEO,cAAA,WAAW,EAAC,UAFnB;AAGI,cAAA,MAAM,EAAC,QAHX;AAII,cAAA,QAAQ,MAJZ;AAKI,cAAA,SAAS,MALb;AAMI,cAAA,EAAE,EAAC,UANP;AAOI,cAAA,KAAK,EAAC,UAPV;AAQI,cAAA,IAAI,EAAC;AART;AAAA;AAAA;AAAA;AAAA,oBAJR,eAaQ,QAAC,KAAD;AAAO,cAAA,SAAS,EAAC,aAAjB;AACI,cAAA,OAAO,EAAC,UADZ;AAEI,cAAA,MAAM,EAAC,QAFX;AAGO,cAAA,WAAW,EAAC,UAHnB;AAII,cAAA,QAAQ,MAJZ;AAKI,cAAA,SAAS,MALb;AAMI,cAAA,IAAI,EAAC,UANT;AAOI,cAAA,KAAK,EAAC,UAPV;AASI,cAAA,IAAI,EAAC,UATT;AAUI,cAAA,EAAE,EAAC;AAVP;AAAA;AAAA;AAAA;AAAA,oBAbR,eA0BQ,QAAC,MAAD;AACI,cAAA,SAAS,EAAC,SADd;AAEI,cAAA,IAAI,EAAC,QAFT;AAGI,cAAA,SAAS,MAHb;AAII,cAAA,OAAO,EAAC,WAJZ;AAKI,cAAA,KAAK,EAAC,SALV;AAAA,wBAMKA,CAAC,CAAC,MAAD;AANN;AAAA;AAAA;AAAA;AAAA,oBA1BR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AARR;AAAA;AAAA;AAAA;AAAA,UADJ;AAyDH,CAlFD;AAAA,UACoBjB,UADpB,EAEqBC,WAFrB,EAGqBE,WAHrB,EAIgBU,cAJhB;AAAA","sourcesContent":["import React from \"react\";\r\nimport {Form, Formik, Field, ErrorMessage} from \"formik\";\r\nimport {useHistory , useLocation} from \"react-router-dom\";\r\nimport {login} from \"../../api/UserApi\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setJwt, setUserData} from \"../../store/slices/userSlice\"\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport \"./Login.css\"\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\nexport default () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n    const {t} = useTranslation(\"login\")\r\n\r\n    const postLogin = (loginData, { setSubmitting }) => {\r\n        setSubmitting(true)\r\n\r\n        login(loginData)\r\n            .then(({data, headers: { authorization }}) => {\r\n                dispatch(setUserData(data))\r\n                dispatch(setJwt(authorization))\r\n\r\n                const { from } = location.state || {\r\n                    from: {\r\n                        pathname: '/'\r\n                    }\r\n                }\r\n\r\n                history.push(from)\r\n            })\r\n            .finally(() => setSubmitting(false))\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                username: '',\r\n                password: ''\r\n            }}\r\n            onSubmit={postLogin}\r\n        >\r\n            {(props) => (\r\n                <>\r\n                    <Form className=\"form-login\">\r\n                        <Container component=\"main\" maxWidth=\"xs\">\r\n                            <CssBaseline />\r\n                            <div >\r\n                                <Typography  className=\"title\" component=\"h1\" variant=\"h5\">\r\n                                    {t('signIn')}\r\n                                </Typography>\r\n                                    <Field className=\"Field-input\"\r\n                                        variant=\"outlined\"\r\n                                           placeholder=\"Username\"\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"username\"\r\n                                        label=\"Username\"\r\n                                        name=\"username\"/>\r\n                                    <Field className=\"Field-input\"\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                           placeholder=\"Password\"\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                    />\r\n\r\n                                    <Button\r\n                                        className=\"sign-in\"\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\">\r\n                                        {t('sign')}\r\n                                    </Button>\r\n\r\n                            </div>\r\n                        </Container>\r\n                        );\r\n                        }\r\n                    </Form>\r\n                </>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}