{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aira\\\\Desktop\\\\JobSearcj\\\\myfirstreactapp\\\\src\\\\Pages\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Form, Formik, Field, ErrorMessage } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { login } from \"../../api/UserApi\";\nimport { useDispatch } from \"react-redux\";\nimport { setJwt, setUserData } from \"../../store/slices/userSlice\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport { Copyright } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const postLogin = (loginData, {\n    setSubmitting\n  }) => {\n    setSubmitting(true);\n    login(loginData).then(({\n      data,\n      headers: {\n        authorization\n      }\n    }) => {\n      dispatch(setUserData(data));\n      dispatch(setJwt(authorization));\n      const {\n        from\n      } = location.state || {\n        from: {\n          pathname: '/'\n        }\n      };\n      history.push(from);\n    }).finally(() => setSubmitting(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: postLogin,\n    children: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          component: \"main\",\n          maxWidth: \"xs\",\n          children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h5\",\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              noValidate: true,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                id: \"username\",\n                label: \"Username\",\n                name: \"username\",\n                autoComplete: \"username\",\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                id: \"password\",\n                autoComplete: \"current-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                fullWidth: true,\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    href: \"/register\",\n                    variant: \"body2\",\n                    children: \"Don't have an account? Sign Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), \"); }\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}, \"KQw0yXqGfavBPslG0wGRMz/cNFE=\", false, function () {\n  return [useHistory, useLocation, useDispatch];\n});","map":{"version":3,"sources":["C:/Users/Aira/Desktop/JobSearcj/myfirstreactapp/src/Pages/Login/Login.js"],"names":["React","Form","Formik","Field","ErrorMessage","useHistory","useLocation","login","useDispatch","setJwt","setUserData","Container","CssBaseline","Typography","TextField","Button","Grid","Link","Box","Copyright","history","location","dispatch","postLogin","loginData","setSubmitting","then","data","headers","authorization","from","state","pathname","push","finally","username","password","props"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Form, Formik, Field, ErrorMessage} from \"formik\";\r\nimport {useHistory , useLocation} from \"react-router-dom\";\r\nimport {login} from \"../../api/UserApi\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setJwt, setUserData} from \"../../store/slices/userSlice\"\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Copyright} from \"@material-ui/icons\";\r\n\r\nexport default () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n\r\n    const postLogin = (loginData, { setSubmitting }) => {\r\n        setSubmitting(true)\r\n\r\n        login(loginData)\r\n            .then(({data, headers: { authorization }}) => {\r\n                dispatch(setUserData(data))\r\n                dispatch(setJwt(authorization))\r\n\r\n                const { from } = location.state || {\r\n                    from: {\r\n                        pathname: '/'\r\n                    }\r\n                }\r\n\r\n                history.push(from)\r\n            })\r\n            .finally(() => setSubmitting(false))\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                username: '',\r\n                password: ''\r\n            }}\r\n            onSubmit={postLogin}\r\n        >\r\n            {(props) => (\r\n                <>\r\n\r\n                    <Form>\r\n                        <Container component=\"main\" maxWidth=\"xs\">\r\n                            <CssBaseline />\r\n                            <div >\r\n                                <Typography component=\"h1\" variant=\"h5\">\r\n                                    Sign in\r\n                                </Typography>\r\n                                <form  noValidate>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"username\"\r\n                                        label=\"Username\"\r\n                                        name=\"username\"\r\n                                        autoComplete=\"username\"\r\n                                        autoFocus\r\n                                    />\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                    />\r\n\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Sign In\r\n                                    </Button>\r\n                                    <Grid container>\r\n                                        <Grid item>\r\n                                            <Link href=\"/register\" variant=\"body2\">\r\n                                                {\"Don't have an account? Sign Up\"}\r\n                                            </Link>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </form>\r\n                            </div>\r\n                        </Container>\r\n                        );\r\n                        }\r\n                    </Form>\r\n                </>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}