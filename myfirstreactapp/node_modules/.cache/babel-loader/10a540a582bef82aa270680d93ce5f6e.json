{"ast":null,"code":"import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport languageDetector from 'i18next-browser-languagedetector';\nimport lt from './translations/lt.json';\nimport en from './translations/en.json';\ni18n.use(languageDetector) // detect language helper\n.use(initReactI18next) // add support for react (e.g. hooks)\n.init({\n  resources: {\n    // resources to initialize with\n    en,\n    lt\n  },\n  // language codes to lookup.\n  // 'all' --> ['en-US', 'en', 'dev'], 'currentOnly' --> 'en-US', 'languageOnly' --> 'en'\n  load: 'languageOnly',\n  ns: ['common'],\n  // string or array of namespaces to load\n  defaultNS: 'common',\n  // default namespace used\n  fallbackLng: 'en',\n  // language to use if translations in user language are not available\n  whitelist: ['lt', 'en'],\n  // array of allowed languages\n  // logs info level to console output. Helps finding issues with loading not working.\n  debug: false,\n  //process.env.NODE_ENV !== 'production',\n  // interpolation config\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["C:/Users/Aira/Desktop/JobSearcj/myfirstreactapp/src/i18n/i18n.js"],"names":["i18n","initReactI18next","languageDetector","lt","en","use","init","resources","load","ns","defaultNS","fallbackLng","whitelist","debug","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEA,OAAOC,EAAP,MAAe,wBAAf;AACA,OAAOC,EAAP,MAAe,wBAAf;AAEAJ,IAAI,CACCK,GADL,CACSH,gBADT,EAC2B;AAD3B,CAEKG,GAFL,CAESJ,gBAFT,EAE2B;AAF3B,CAGKK,IAHL,CAGU;AACFC,EAAAA,SAAS,EAAE;AAAG;AACVH,IAAAA,EADO;AAEPD,IAAAA;AAFO,GADT;AAKF;AACA;AACAK,EAAAA,IAAI,EAAE,cAPJ;AAQFC,EAAAA,EAAE,EAAE,CAAC,QAAD,CARF;AAQc;AAChBC,EAAAA,SAAS,EAAE,QATT;AASoB;AACtBC,EAAAA,WAAW,EAAE,IAVX;AAUiB;AACnBC,EAAAA,SAAS,EAAE,CAAC,IAAD,EAAO,IAAP,CAXT;AAWuB;AACzB;AACAC,EAAAA,KAAK,EAAE,KAbL;AAaW;AACb;AACAC,EAAAA,aAAa,EAAE;AACXC,IAAAA,WAAW,EAAE,KADF,CACS;;AADT;AAfb,CAHV;AAuBA,eAAef,IAAf","sourcesContent":["import i18n from 'i18next'\r\nimport { initReactI18next } from 'react-i18next'\r\nimport languageDetector from 'i18next-browser-languagedetector'\r\n\r\nimport lt from './translations/lt.json'\r\nimport en from './translations/en.json'\r\n\r\ni18n\r\n    .use(languageDetector) // detect language helper\r\n    .use(initReactI18next) // add support for react (e.g. hooks)\r\n    .init({\r\n        resources: {  // resources to initialize with\r\n            en,\r\n            lt\r\n        },\r\n        // language codes to lookup.\r\n        // 'all' --> ['en-US', 'en', 'dev'], 'currentOnly' --> 'en-US', 'languageOnly' --> 'en'\r\n        load: 'languageOnly',\r\n        ns: ['common'], // string or array of namespaces to load\r\n        defaultNS: 'common',  // default namespace used\r\n        fallbackLng: 'en', // language to use if translations in user language are not available\r\n        whitelist: ['lt', 'en'], // array of allowed languages\r\n        // logs info level to console output. Helps finding issues with loading not working.\r\n        debug: false,//process.env.NODE_ENV !== 'production',\r\n        // interpolation config\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by default\r\n        }\r\n    });\r\n\r\nexport default i18n;"]},"metadata":{},"sourceType":"module"}